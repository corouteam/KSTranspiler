// Generated from /Users/annalabellarte/Dev/Universit√†/KSTranspiler2/src/main/antlr/KotlinLexer.g4 by ANTLR 4.10.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class KotlinLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.10.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		NL=1, WS=2, VAR=3, VAL=4, PRINT=5, AS=6, INT=7, DOUBLE=8, BOOL=9, STRING=10, 
		INT_LIT=11, BOOL_LIT=12, DOUBLE_LIT=13, FLOAT_LIT=14, PLUS=15, MINUS=16, 
		ASTERISK=17, DIVISION=18, ASSIGN=19, LPAREN=20, RPAREN=21, COLON=22, LCURL=23, 
		RCURL=24, SEMICOLON=25, IF=26, ELSE=27, ID=28, QUOTE_OPEN=29, QUOTE_CLOSE=30, 
		LineStrText=31;
	public static final int
		LineString=1, Inside=2;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE", "LineString", "Inside"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"NL", "WS", "VAR", "VAL", "PRINT", "AS", "INT", "DOUBLE", "BOOL", "STRING", 
			"INT_LIT", "BOOL_LIT", "DOUBLE_LIT", "FLOAT_LIT", "PLUS", "MINUS", "ASTERISK", 
			"DIVISION", "ASSIGN", "LPAREN", "RPAREN", "COLON", "LCURL", "RCURL", 
			"SEMICOLON", "IF", "ELSE", "ID", "QUOTE_OPEN", "QUOTE_CLOSE", "LineStrText", 
			"Inside_QUOTE_OPEN", "DecDigit", "DecDigitNoZero", "DecDigitOrSeparator", 
			"DecDigits"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, "'var'", "'val'", "'print'", "'as'", "'Int'", "'Double'", 
			"'Bool'", "'String'", null, null, null, null, "'+'", "'-'", "'*'", "'/'", 
			"'='", "'('", "')'", "':'", "'{'", "'}'", "';'", "'if'", "'else'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "NL", "WS", "VAR", "VAL", "PRINT", "AS", "INT", "DOUBLE", "BOOL", 
			"STRING", "INT_LIT", "BOOL_LIT", "DOUBLE_LIT", "FLOAT_LIT", "PLUS", "MINUS", 
			"ASTERISK", "DIVISION", "ASSIGN", "LPAREN", "RPAREN", "COLON", "LCURL", 
			"RCURL", "SEMICOLON", "IF", "ELSE", "ID", "QUOTE_OPEN", "QUOTE_CLOSE", 
			"LineStrText"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public KotlinLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "KotlinLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u001f\u00f8\u0006\uffff\uffff\u0006\uffff\uffff\u0006\uffff"+
		"\uffff\u0002\u0000\u0007\u0000\u0002\u0001\u0007\u0001\u0002\u0002\u0007"+
		"\u0002\u0002\u0003\u0007\u0003\u0002\u0004\u0007\u0004\u0002\u0005\u0007"+
		"\u0005\u0002\u0006\u0007\u0006\u0002\u0007\u0007\u0007\u0002\b\u0007\b"+
		"\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b\u0007\u000b\u0002\f\u0007"+
		"\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002\u000f\u0007\u000f\u0002"+
		"\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002\u0012\u0007\u0012\u0002"+
		"\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002\u0015\u0007\u0015\u0002"+
		"\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002\u0018\u0007\u0018\u0002"+
		"\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002\u001b\u0007\u001b\u0002"+
		"\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002\u001e\u0007\u001e\u0002"+
		"\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007!\u0002\"\u0007\"\u0002#"+
		"\u0007#\u0001\u0000\u0001\u0000\u0001\u0000\u0003\u0000O\b\u0000\u0001"+
		"\u0001\u0004\u0001R\b\u0001\u000b\u0001\f\u0001S\u0001\u0001\u0001\u0001"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001"+
		"\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\n\u0001\n\u0005\n\u0082\b\n\n\n\f\n\u0085\t\n\u0001\n\u0003\n"+
		"\u0088\b\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0003\u000b\u0093\b\u000b"+
		"\u0001\f\u0003\f\u0096\b\f\u0001\f\u0001\f\u0001\f\u0003\f\u009b\b\f\u0001"+
		"\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0003\r\u00a3\b\r\u0001\u000e"+
		"\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0011"+
		"\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0014"+
		"\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0017"+
		"\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u0019"+
		"\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001b"+
		"\u0005\u001b\u00c4\b\u001b\n\u001b\f\u001b\u00c7\t\u001b\u0001\u001b\u0001"+
		"\u001b\u0005\u001b\u00cb\b\u001b\n\u001b\f\u001b\u00ce\t\u001b\u0001\u001c"+
		"\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001d"+
		"\u0001\u001d\u0001\u001e\u0004\u001e\u00d9\b\u001e\u000b\u001e\f\u001e"+
		"\u00da\u0001\u001e\u0003\u001e\u00de\b\u001e\u0001\u001f\u0001\u001f\u0001"+
		"\u001f\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001!\u0001!\u0001\"\u0001"+
		"\"\u0003\"\u00eb\b\"\u0001#\u0001#\u0005#\u00ef\b#\n#\f#\u00f2\t#\u0001"+
		"#\u0001#\u0001#\u0003#\u00f7\b#\u0000\u0000$\u0003\u0001\u0005\u0002\u0007"+
		"\u0003\t\u0004\u000b\u0005\r\u0006\u000f\u0007\u0011\b\u0013\t\u0015\n"+
		"\u0017\u000b\u0019\f\u001b\r\u001d\u000e\u001f\u000f!\u0010#\u0011%\u0012"+
		"\'\u0013)\u0014+\u0015-\u0016/\u00171\u00183\u00195\u001a7\u001b9\u001c"+
		";\u001d=\u001e?\u001fA\u0000C\u0000E\u0000G\u0000I\u0000\u0003\u0000\u0001"+
		"\u0002\u0007\u0002\u0000\n\nrr\u0002\u0000\t\t  \u0002\u0000FFff\u0001"+
		"\u0000__\u0001\u0000az\u0004\u000009AZ__az\u0003\u0000\"\"$$\\\\\u0100"+
		"\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000"+
		"\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000"+
		"\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f"+
		"\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013"+
		"\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017"+
		"\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b"+
		"\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f"+
		"\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000"+
		"\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000"+
		"\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000"+
		"-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001"+
		"\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000"+
		"\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000"+
		";\u0001\u0000\u0000\u0000\u0001=\u0001\u0000\u0000\u0000\u0001?\u0001"+
		"\u0000\u0000\u0000\u0002A\u0001\u0000\u0000\u0000\u0003N\u0001\u0000\u0000"+
		"\u0000\u0005Q\u0001\u0000\u0000\u0000\u0007W\u0001\u0000\u0000\u0000\t"+
		"[\u0001\u0000\u0000\u0000\u000b_\u0001\u0000\u0000\u0000\re\u0001\u0000"+
		"\u0000\u0000\u000fh\u0001\u0000\u0000\u0000\u0011l\u0001\u0000\u0000\u0000"+
		"\u0013s\u0001\u0000\u0000\u0000\u0015x\u0001\u0000\u0000\u0000\u0017\u0087"+
		"\u0001\u0000\u0000\u0000\u0019\u0092\u0001\u0000\u0000\u0000\u001b\u009a"+
		"\u0001\u0000\u0000\u0000\u001d\u00a2\u0001\u0000\u0000\u0000\u001f\u00a4"+
		"\u0001\u0000\u0000\u0000!\u00a6\u0001\u0000\u0000\u0000#\u00a8\u0001\u0000"+
		"\u0000\u0000%\u00aa\u0001\u0000\u0000\u0000\'\u00ac\u0001\u0000\u0000"+
		"\u0000)\u00ae\u0001\u0000\u0000\u0000+\u00b0\u0001\u0000\u0000\u0000-"+
		"\u00b2\u0001\u0000\u0000\u0000/\u00b4\u0001\u0000\u0000\u00001\u00b6\u0001"+
		"\u0000\u0000\u00003\u00b8\u0001\u0000\u0000\u00005\u00ba\u0001\u0000\u0000"+
		"\u00007\u00bd\u0001\u0000\u0000\u00009\u00c5\u0001\u0000\u0000\u0000;"+
		"\u00cf\u0001\u0000\u0000\u0000=\u00d3\u0001\u0000\u0000\u0000?\u00dd\u0001"+
		"\u0000\u0000\u0000A\u00df\u0001\u0000\u0000\u0000C\u00e4\u0001\u0000\u0000"+
		"\u0000E\u00e6\u0001\u0000\u0000\u0000G\u00ea\u0001\u0000\u0000\u0000I"+
		"\u00f6\u0001\u0000\u0000\u0000KL\u0005\r\u0000\u0000LO\u0005\n\u0000\u0000"+
		"MO\u0007\u0000\u0000\u0000NK\u0001\u0000\u0000\u0000NM\u0001\u0000\u0000"+
		"\u0000O\u0004\u0001\u0000\u0000\u0000PR\u0007\u0001\u0000\u0000QP\u0001"+
		"\u0000\u0000\u0000RS\u0001\u0000\u0000\u0000SQ\u0001\u0000\u0000\u0000"+
		"ST\u0001\u0000\u0000\u0000TU\u0001\u0000\u0000\u0000UV\u0006\u0001\u0000"+
		"\u0000V\u0006\u0001\u0000\u0000\u0000WX\u0005v\u0000\u0000XY\u0005a\u0000"+
		"\u0000YZ\u0005r\u0000\u0000Z\b\u0001\u0000\u0000\u0000[\\\u0005v\u0000"+
		"\u0000\\]\u0005a\u0000\u0000]^\u0005l\u0000\u0000^\n\u0001\u0000\u0000"+
		"\u0000_`\u0005p\u0000\u0000`a\u0005r\u0000\u0000ab\u0005i\u0000\u0000"+
		"bc\u0005n\u0000\u0000cd\u0005t\u0000\u0000d\f\u0001\u0000\u0000\u0000"+
		"ef\u0005a\u0000\u0000fg\u0005s\u0000\u0000g\u000e\u0001\u0000\u0000\u0000"+
		"hi\u0005I\u0000\u0000ij\u0005n\u0000\u0000jk\u0005t\u0000\u0000k\u0010"+
		"\u0001\u0000\u0000\u0000lm\u0005D\u0000\u0000mn\u0005o\u0000\u0000no\u0005"+
		"u\u0000\u0000op\u0005b\u0000\u0000pq\u0005l\u0000\u0000qr\u0005e\u0000"+
		"\u0000r\u0012\u0001\u0000\u0000\u0000st\u0005B\u0000\u0000tu\u0005o\u0000"+
		"\u0000uv\u0005o\u0000\u0000vw\u0005l\u0000\u0000w\u0014\u0001\u0000\u0000"+
		"\u0000xy\u0005S\u0000\u0000yz\u0005t\u0000\u0000z{\u0005r\u0000\u0000"+
		"{|\u0005i\u0000\u0000|}\u0005n\u0000\u0000}~\u0005g\u0000\u0000~\u0016"+
		"\u0001\u0000\u0000\u0000\u007f\u0083\u0003E!\u0000\u0080\u0082\u0003C"+
		" \u0000\u0081\u0080\u0001\u0000\u0000\u0000\u0082\u0085\u0001\u0000\u0000"+
		"\u0000\u0083\u0081\u0001\u0000\u0000\u0000\u0083\u0084\u0001\u0000\u0000"+
		"\u0000\u0084\u0088\u0001\u0000\u0000\u0000\u0085\u0083\u0001\u0000\u0000"+
		"\u0000\u0086\u0088\u0003C \u0000\u0087\u007f\u0001\u0000\u0000\u0000\u0087"+
		"\u0086\u0001\u0000\u0000\u0000\u0088\u0018\u0001\u0000\u0000\u0000\u0089"+
		"\u008a\u0005t\u0000\u0000\u008a\u008b\u0005r\u0000\u0000\u008b\u008c\u0005"+
		"u\u0000\u0000\u008c\u0093\u0005e\u0000\u0000\u008d\u008e\u0005f\u0000"+
		"\u0000\u008e\u008f\u0005a\u0000\u0000\u008f\u0090\u0005l\u0000\u0000\u0090"+
		"\u0091\u0005s\u0000\u0000\u0091\u0093\u0005e\u0000\u0000\u0092\u0089\u0001"+
		"\u0000\u0000\u0000\u0092\u008d\u0001\u0000\u0000\u0000\u0093\u001a\u0001"+
		"\u0000\u0000\u0000\u0094\u0096\u0003I#\u0000\u0095\u0094\u0001\u0000\u0000"+
		"\u0000\u0095\u0096\u0001\u0000\u0000\u0000\u0096\u0097\u0001\u0000\u0000"+
		"\u0000\u0097\u0098\u0005.\u0000\u0000\u0098\u009b\u0003I#\u0000\u0099"+
		"\u009b\u0003I#\u0000\u009a\u0095\u0001\u0000\u0000\u0000\u009a\u0099\u0001"+
		"\u0000\u0000\u0000\u009b\u001c\u0001\u0000\u0000\u0000\u009c\u009d\u0003"+
		"\u001b\f\u0000\u009d\u009e\u0007\u0002\u0000\u0000\u009e\u00a3\u0001\u0000"+
		"\u0000\u0000\u009f\u00a0\u0003I#\u0000\u00a0\u00a1\u0007\u0002\u0000\u0000"+
		"\u00a1\u00a3\u0001\u0000\u0000\u0000\u00a2\u009c\u0001\u0000\u0000\u0000"+
		"\u00a2\u009f\u0001\u0000\u0000\u0000\u00a3\u001e\u0001\u0000\u0000\u0000"+
		"\u00a4\u00a5\u0005+\u0000\u0000\u00a5 \u0001\u0000\u0000\u0000\u00a6\u00a7"+
		"\u0005-\u0000\u0000\u00a7\"\u0001\u0000\u0000\u0000\u00a8\u00a9\u0005"+
		"*\u0000\u0000\u00a9$\u0001\u0000\u0000\u0000\u00aa\u00ab\u0005/\u0000"+
		"\u0000\u00ab&\u0001\u0000\u0000\u0000\u00ac\u00ad\u0005=\u0000\u0000\u00ad"+
		"(\u0001\u0000\u0000\u0000\u00ae\u00af\u0005(\u0000\u0000\u00af*\u0001"+
		"\u0000\u0000\u0000\u00b0\u00b1\u0005)\u0000\u0000\u00b1,\u0001\u0000\u0000"+
		"\u0000\u00b2\u00b3\u0005:\u0000\u0000\u00b3.\u0001\u0000\u0000\u0000\u00b4"+
		"\u00b5\u0005{\u0000\u0000\u00b50\u0001\u0000\u0000\u0000\u00b6\u00b7\u0005"+
		"}\u0000\u0000\u00b72\u0001\u0000\u0000\u0000\u00b8\u00b9\u0005;\u0000"+
		"\u0000\u00b94\u0001\u0000\u0000\u0000\u00ba\u00bb\u0005i\u0000\u0000\u00bb"+
		"\u00bc\u0005f\u0000\u0000\u00bc6\u0001\u0000\u0000\u0000\u00bd\u00be\u0005"+
		"e\u0000\u0000\u00be\u00bf\u0005l\u0000\u0000\u00bf\u00c0\u0005s\u0000"+
		"\u0000\u00c0\u00c1\u0005e\u0000\u0000\u00c18\u0001\u0000\u0000\u0000\u00c2"+
		"\u00c4\u0007\u0003\u0000\u0000\u00c3\u00c2\u0001\u0000\u0000\u0000\u00c4"+
		"\u00c7\u0001\u0000\u0000\u0000\u00c5\u00c3\u0001\u0000\u0000\u0000\u00c5"+
		"\u00c6\u0001\u0000\u0000\u0000\u00c6\u00c8\u0001\u0000\u0000\u0000\u00c7"+
		"\u00c5\u0001\u0000\u0000\u0000\u00c8\u00cc\u0007\u0004\u0000\u0000\u00c9"+
		"\u00cb\u0007\u0005\u0000\u0000\u00ca\u00c9\u0001\u0000\u0000\u0000\u00cb"+
		"\u00ce\u0001\u0000\u0000\u0000\u00cc\u00ca\u0001\u0000\u0000\u0000\u00cc"+
		"\u00cd\u0001\u0000\u0000\u0000\u00cd:\u0001\u0000\u0000\u0000\u00ce\u00cc"+
		"\u0001\u0000\u0000\u0000\u00cf\u00d0\u0005\"\u0000\u0000\u00d0\u00d1\u0001"+
		"\u0000\u0000\u0000\u00d1\u00d2\u0006\u001c\u0001\u0000\u00d2<\u0001\u0000"+
		"\u0000\u0000\u00d3\u00d4\u0005\"\u0000\u0000\u00d4\u00d5\u0001\u0000\u0000"+
		"\u0000\u00d5\u00d6\u0006\u001d\u0002\u0000\u00d6>\u0001\u0000\u0000\u0000"+
		"\u00d7\u00d9\b\u0006\u0000\u0000\u00d8\u00d7\u0001\u0000\u0000\u0000\u00d9"+
		"\u00da\u0001\u0000\u0000\u0000\u00da\u00d8\u0001\u0000\u0000\u0000\u00da"+
		"\u00db\u0001\u0000\u0000\u0000\u00db\u00de\u0001\u0000\u0000\u0000\u00dc"+
		"\u00de\u0005$\u0000\u0000\u00dd\u00d8\u0001\u0000\u0000\u0000\u00dd\u00dc"+
		"\u0001\u0000\u0000\u0000\u00de@\u0001\u0000\u0000\u0000\u00df\u00e0\u0003"+
		";\u001c\u0000\u00e0\u00e1\u0001\u0000\u0000\u0000\u00e1\u00e2\u0006\u001f"+
		"\u0001\u0000\u00e2\u00e3\u0006\u001f\u0003\u0000\u00e3B\u0001\u0000\u0000"+
		"\u0000\u00e4\u00e5\u000209\u0000\u00e5D\u0001\u0000\u0000\u0000\u00e6"+
		"\u00e7\u000219\u0000\u00e7F\u0001\u0000\u0000\u0000\u00e8\u00eb\u0003"+
		"C \u0000\u00e9\u00eb\u0005_\u0000\u0000\u00ea\u00e8\u0001\u0000\u0000"+
		"\u0000\u00ea\u00e9\u0001\u0000\u0000\u0000\u00ebH\u0001\u0000\u0000\u0000"+
		"\u00ec\u00f0\u0003C \u0000\u00ed\u00ef\u0003G\"\u0000\u00ee\u00ed\u0001"+
		"\u0000\u0000\u0000\u00ef\u00f2\u0001\u0000\u0000\u0000\u00f0\u00ee\u0001"+
		"\u0000\u0000\u0000\u00f0\u00f1\u0001\u0000\u0000\u0000\u00f1\u00f3\u0001"+
		"\u0000\u0000\u0000\u00f2\u00f0\u0001\u0000\u0000\u0000\u00f3\u00f4\u0003"+
		"C \u0000\u00f4\u00f7\u0001\u0000\u0000\u0000\u00f5\u00f7\u0003C \u0000"+
		"\u00f6\u00ec\u0001\u0000\u0000\u0000\u00f6\u00f5\u0001\u0000\u0000\u0000"+
		"\u00f7J\u0001\u0000\u0000\u0000\u0012\u0000\u0001\u0002NS\u0083\u0087"+
		"\u0092\u0095\u009a\u00a2\u00c5\u00cc\u00da\u00dd\u00ea\u00f0\u00f6\u0004"+
		"\u0006\u0000\u0000\u0005\u0001\u0000\u0004\u0000\u0000\u0007\u001d\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}